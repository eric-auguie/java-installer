#!/bin/sh

INSTALLER_SCRIPT="get-java.sh"
INSTALLER_FILE="$SYNOPKG_PKGDEST/$INSTALLER_SCRIPT"
INSTALLER_URL="https://raw.githubusercontent.com/eric-auguie/java-installer/@{branch}/release/$INSTALLER_SCRIPT"
SIGNATURE_FILE="$INSTALLER_FILE.asc"
SIGNATURE_URL="$INSTALLER_URL.asc"

SIGNATURE_PUBLIC_KEY="$SYNOPKG_PKGDEST/eric.keyring"
PKG_LOG="$SYNOPKG_PKGDEST/install-java.log"


case "$1" in
	install)

		# fetch installer
		if gpgv --keyring "$SIGNATURE_PUBLIC_KEY" "$SIGNATURE_FILE" "$INSTALLER_FILE"; then
			cd "$SYNOPKG_PKGDEST"
			# fetch java binaries
			chmod +x "$INSTALLER_FILE" && "$INSTALLER_FILE" fetch jdk
			# remove existing java binaries
			rm -rv bin include jmods lib conf legal man
			# extract java binaries
			tar --strip-components=1 -vxzf *.tar.gz && rm -v *.tar.gz
		fi

		# make sure that `java` is working
		if [ -x "/usr/local/bin/java" ]; then
			# display success message
			{
				echo '<p style="color:#0090D9">The latest OpenJDK has been installed successfully.</p><br>'
				echo '<pre><samp>$ <kbd>java -version</kbd>'
				"/usr/local/bin/java" -version
				echo '</samp></pre>'
			} >> "$SYNOPKG_TEMP_LOGFILE" 2>&1
		else
			# display error message
			echo "Ooops, something went wrong... Run <kbd>cat $PKG_LOG</kbd> for details." >> "$SYNOPKG_TEMP_LOGFILE"
			exit 150 # package is broken and should be reinstalled
		fi
		exit 0
	;;


	start)
		# check for updates once per month
		if [ ! -x "$INSTALLER_FILE" ] || [ $(find "$SYNOPKG_PKGDEST" -type f -name '*.asc' -maxdepth 1 -mtime +30 | wc -l) -gt 0 ]; then
			$0 install 2>&1 | tee "$PKG_LOG"
		fi
		exit 0
	;;


	stop)
		exit 0
	;;


	status)
		if [ -x "/usr/local/bin/java" ]; then
			exit 0
		else
			exit 150 # package is broken and should be reinstalled
		fi
	;;


	log)
		echo "$PKG_LOG"
		exit 0
	;;


	*)
		echo "Usage: $0 {start|stop|status|log}"
		exit 1
	;;
esac
